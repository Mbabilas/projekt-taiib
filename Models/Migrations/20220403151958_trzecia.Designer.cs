// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Models.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20220403151958_trzecia")]
    partial class trzecia
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("Models.Armia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MozliwosciBojowe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SilyLadowe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SilyMorskie")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SilyPowietrzne")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Armie");
                });

            modelBuilder.Entity("Models.Bron", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("WUzyciu")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Bronie");
                });

            modelBuilder.Entity("Models.Dywizja", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MiejsceStacjonowania")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Personel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Dywizje");
                });

            modelBuilder.Entity("Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mnoznik")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Przeznaczenie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Typ")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Modele");
                });

            modelBuilder.Entity("Models.Stopien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Generalski")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Oficerski")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Podoficerski")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stopnie");
                });

            modelBuilder.Entity("Models.Zgloszenie", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Kategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("OrzeczenieLekarskie")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Plec")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrescZgloszenia")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypZgloszenia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Zatwierdzony")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Zgloszenia");
                });

            modelBuilder.Entity("Models.Zolnierz", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiejsceUrodzenia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Pesel")
                        .HasMaxLength(11)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Zolnierze");
                });

            modelBuilder.Entity("Models.Bron", b =>
                {
                    b.HasOne("Models.Armia", "Armia")
                        .WithMany("Bronie")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Model", "Model")
                        .WithMany("Bronie")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armia");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Models.Dywizja", b =>
                {
                    b.HasOne("Models.Armia", "Armia")
                        .WithMany("Dywizje")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armia");
                });

            modelBuilder.Entity("Models.Zgloszenie", b =>
                {
                    b.HasOne("Models.Armia", "Armia")
                        .WithMany("Zgloszenia")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armia");
                });

            modelBuilder.Entity("Models.Zolnierz", b =>
                {
                    b.HasOne("Models.Dywizja", "Dywizja")
                        .WithMany("Zolnierze")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Stopien", "Stopien")
                        .WithMany("Zlonierze")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dywizja");

                    b.Navigation("Stopien");
                });

            modelBuilder.Entity("Models.Armia", b =>
                {
                    b.Navigation("Bronie");

                    b.Navigation("Dywizje");

                    b.Navigation("Zgloszenia");
                });

            modelBuilder.Entity("Models.Dywizja", b =>
                {
                    b.Navigation("Zolnierze");
                });

            modelBuilder.Entity("Models.Model", b =>
                {
                    b.Navigation("Bronie");
                });

            modelBuilder.Entity("Models.Stopien", b =>
                {
                    b.Navigation("Zlonierze");
                });
#pragma warning restore 612, 618
        }
    }
}
